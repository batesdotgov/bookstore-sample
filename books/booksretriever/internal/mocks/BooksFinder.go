// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	books "github.com/diegoholiveira/bookstore-sample/books"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// BooksFinder is an autogenerated mock type for the BooksFinder type
type BooksFinder struct {
	mock.Mock
}

// FindBookByID provides a mock function with given fields: _a0, _a1
func (_m *BooksFinder) FindBookByID(_a0 context.Context, _a1 uint64) (books.Book, error) {
	ret := _m.Called(_a0, _a1)

	var r0 books.Book
	if rf, ok := ret.Get(0).(func(context.Context, uint64) books.Book); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(books.Book)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uint64) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindRecents provides a mock function with given fields: _a0
func (_m *BooksFinder) FindRecents(_a0 context.Context) (books.Books, error) {
	ret := _m.Called(_a0)

	var r0 books.Books
	if rf, ok := ret.Get(0).(func(context.Context) books.Books); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(books.Books)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
